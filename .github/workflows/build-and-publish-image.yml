name: Build and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      IMAGE_REPOSITORY: nginx-hello-world
      NAMESPACE: navlisdata

    permissions:
      contents: read
      id-token: write  # permission to get the OIDC-Tokens

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.NAMESPACE }}/${{ env.IMAGE_REPOSITORY }}

      # First image build & push (tagged)
      - name: Build and push Docker image
        id: push-versioned-image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.NAMESPACE }}/${{ env.IMAGE_REPOSITORY }}:${{ env.sha_short }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      # Second image build & push (latest)
      - name: Build and push Docker image
        id: push-latest-image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.NAMESPACE }}/${{ env.IMAGE_REPOSITORY }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      # Update kubernetes manifests file
#      - name: Update Kubernetes Manifests
#        run: |
#          sed -i 's|tag: .*|tag: "'${{ env.sha_short }}'"|' helm/hello-world/values.yaml
#
#      - name: Commit and Push Changes
#        run: |
#          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
#          git config --global user.name "${{ github.actor }}"
#          git add helm/chart-name/values.yaml
#          git commit -m "Replaced latest image and created new image version with tag ${{ env.sha_short }}"
#          git push
